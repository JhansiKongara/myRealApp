name: Create PR on Commit

on:
  push:
    branches:
      - develop # Trigger on commits to the 'develop' branch

permissions:
  contents: write
  pull-requests: write

jobs:
  create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for existing pull requests
        id: check_pr
        uses: actions/github-script@v6
        with:
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:develop`, // Check for PRs from 'develop' branch
              base: 'main' // Destination branch
            });

            if (prs.length > 0) {
              core.setOutput('pr_exists', true);
            } else {
              core.setOutput('pr_exists', false);
            }

      - name: Create Pull Request
        if: steps.check_pr.outputs.pr_exists == 'false'
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          branch: develop # Source branch
          base: main # Destination branch
          title: "Merge develop into main"
          body: "This PR was automatically created to merge changes from develop into main."
          labels: "automated"

      - name: Label the Pull Request
        if: steps.check_pr.outputs.pr_exists == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = ${{ steps.create_pr.outputs.pull_request_number }};
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: ['auto-generated', 'review-needed']
            });

      - name: Assign Reviewer to Pull Request
        if: steps.check_pr.outputs.pr_exists == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = ${{ steps.create_pr.outputs.pull_request_number }};
            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              reviewers: ['JhansiKongara']  # Assigning reviewer
            });
