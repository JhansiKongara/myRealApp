name: ESLint (Backend)

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  statuses: write

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: backend
        run: npm install --only=dev

      - name: Run ESLint
        working-directory: backend
        id: eslint
        run: |
          npx eslint . --config .eslintrc.json --format=gha
        continue-on-error: true

      - name: Set GitHub commit status
        uses: actions/github-script@v6
        with:
          script: |
            const sha = context.payload.pull_request.head.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: "${{ steps.eslint.outcome }}" === "success" ? "success" : "failure",
              context: "ESLint (Backend)",
              description: "${{ steps.eslint.outcome }}" === "success"
                ? "All checks passed"
                : "Some checks failed",
            });

  auto-merge:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Automatically merge pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              throw new Error("No pull request context available.");
            }
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: "squash",
            });
